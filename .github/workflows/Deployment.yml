name: Deploy to EKS

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}  # Ensure this is set in GitHub Secrets

    - name: Create EKS Cluster
      run: |
        CLUSTER_NAME="my-project-cluster"
        NODE_GROUP_NAME="my-node-group"
        # Create the EKS cluster
        aws eks create-cluster --name $CLUSTER_NAME --kubernetes-version 1.21 --role-arn arn:aws:iam::<your-account-id>:role/EKSClusterRole --resources-vpc-config subnetIds=<subnet-1>,<subnet-2>,securityGroupIds=<sg-id>
        # Wait for the cluster to be active
        aws eks wait cluster-active --name $CLUSTER_NAME
        # Create the node group
        aws eks create-nodegroup --cluster-name $CLUSTER_NAME --nodegroup-name $NODE_GROUP_NAME --node-role arn:aws:iam::<your-account-id>:role/EKSNodeRole --subnets <subnet-1> <subnet-2> --scaling-config minSize=1,maxSize=3,desiredSize=2

    - name: Update Kubeconfig
      run: |
        aws eks update-kubeconfig --name $CLUSTER_NAME --region ${{ secrets.AWS_REGION }}

    - name: Deploy to EKS
      run: |
        kubectl apply -f k8s/

    - name: Verify Deployment
      run: |
        kubectl rollout status deployment/<your-deployment-name> -n <your-namespace>
        
    - name: Clean Up EKS Cluster
      if: success()
      run: |
        aws eks delete-cluster --name $CLUSTER_NAME
